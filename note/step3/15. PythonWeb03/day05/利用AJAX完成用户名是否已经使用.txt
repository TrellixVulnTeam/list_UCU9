1 当input_username失去焦点的时候，利用JQuery发送ajax请求。
2 ajax方法参数为一个JavaScript对象。该JavaScript对象的属性说明：
$.ajax({
 url:'/check', 访问路径
 data:{'username':username},访问参数
 type:'post',访问方式
 dataType:'json',服务器返回的数据格式
 async:'true',以异步(true)还是同步(false)等待响应
 
当获得了服务器的正常响应时，调用函数，执行函数中的代码
 该函数会被传入3个参数：data服务器响应的内容，status状态描述
 xhr发送该ajax请求时使用的XMLHTTPRequest对象
 success:function (data,status,xhr) {
   console.log('成功获取服务器响应');
   console.log(data);
   console.log(status)
 },
 当无法获得服务器的响应时，调用函数，执行函数中的代码
 该函数会被传入3个参数：
 xhr发送该ajax请求时使用的XMLHTTPRequest对象 
 status状态描述
 error错误信息
  error:function (xhr,status,error) {
   console.log('获取服务器响应失败');
   console.log(error);
   console.log(status)
}
});
3 JQuery以post方式发送ajax请求到服务器，请求路径是"/check"，所以要在myserver.py中配置该请求路径。
[.....('/check',CheckHandler)]。然后在myhandlers下的myhandlers.py中添加class CheckHandler(RequestHandler)。写post方法处理客户端请求。
4 在CheckHandler的post方法中利用self.get_body_argument获取到客户端提交的参数。然后利用该参数传入self.application.dbutil.hasUser方法中，执行hasUser方法。
5 DBUtil的hasUser方法就是根据参数传入的用户名，到tb_user表中查询是否已经有用户使用了该用户名。根据查询结果返回True或者False。
6 CheckHandler根据dbutil.hasUser方法的返回值结果，构建json字符串返回到客户端。
7 一旦客户端收到了服务器返回的json字符串，就会触发success对应的函数，并将服务器返回的data传入到参数中。在浏览器的控制台打印data即可。